// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/TextBox should match snapshot with required props 1`] = `
<div
  className="textarea-wrapper"
>
  <SuggestionBox
    className="form-control custom-textarea"
    completeOnTab={true}
    containerClass=""
    id="someid"
    inputComponent={[Function]}
    isRHS={false}
    listComponent={[Function]}
    listStyle="top"
    listenForMentionKeyClick={false}
    onBlur={[Function]}
    onChange={[Function]}
    onHeightChange={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseUp={[Function]}
    openOnFocus={false}
    openWhenEmpty={false}
    placeholder="placeholder text"
    providers={
      Array [
        AtMentionProvider {
          "autocompleteUsersInChannel": [Function],
          "currentUserId": "currentUserId",
          "data": null,
          "disableDispatches": false,
          "latestComplete": true,
          "latestPrefix": "",
          "profilesInChannel": Array [
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id1@email.test",
              "email_verified": true,
              "first_name": "name-id1",
              "id": "id1",
              "is_bot": false,
              "last_name": "name-id1",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id1",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id1",
              "update_at": 0,
              "username": "username-id1",
            },
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id2@email.test",
              "email_verified": true,
              "first_name": "name-id2",
              "id": "id2",
              "is_bot": false,
              "last_name": "name-id2",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id2",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id2",
              "update_at": 0,
              "username": "username-id2",
            },
          ],
          "profilesNotInChannel": Array [
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id3@email.test",
              "email_verified": true,
              "first_name": "name-id3",
              "id": "id3",
              "is_bot": false,
              "last_name": "name-id3",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id3",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id3",
              "update_at": 0,
              "username": "username-id3",
            },
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id4@email.test",
              "email_verified": true,
              "first_name": "name-id4",
              "id": "id4",
              "is_bot": false,
              "last_name": "name-id4",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id4",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id4",
              "update_at": 0,
              "username": "username-id4",
            },
          ],
          "requestStarted": false,
          "useChannelMentions": true,
        },
        ChannelMentionProvider {
          "autocompleteChannels": [MockFunction],
          "disableDispatches": false,
          "lastCompletedWord": "",
          "lastPrefixTrimmed": "",
          "lastPrefixWithNoResults": "",
          "latestComplete": true,
          "latestPrefix": "",
          "requestStarted": false,
        },
        EmoticonProvider {
          "disableDispatches": false,
          "latestComplete": true,
          "latestPrefix": "",
          "requestStarted": false,
        },
      ]
    }
    renderDividers={true}
    renderNoResults={false}
    replaceAllInputOnSelect={false}
    requiredCharacters={1}
    spellCheck="true"
    style={
      Object {
        "visibility": "visible",
      }
    }
    value="some test text"
  />
</div>
`;

exports[`components/TextBox should throw error when new property is too long 1`] = `
<div
  className="textarea-wrapper"
>
  <SuggestionBox
    className="form-control custom-textarea"
    completeOnTab={true}
    containerClass=""
    id="someid"
    inputComponent={[Function]}
    isRHS={false}
    listComponent={[Function]}
    listStyle="top"
    listenForMentionKeyClick={false}
    onBlur={[Function]}
    onChange={[Function]}
    onHeightChange={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseUp={[Function]}
    openOnFocus={false}
    openWhenEmpty={false}
    placeholder="placeholder text"
    providers={
      Array [
        AtMentionProvider {
          "autocompleteUsersInChannel": [Function],
          "currentUserId": "currentUserId",
          "data": null,
          "disableDispatches": false,
          "latestComplete": true,
          "latestPrefix": "",
          "profilesInChannel": Array [
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id1@email.test",
              "email_verified": true,
              "first_name": "name-id1",
              "id": "id1",
              "is_bot": false,
              "last_name": "name-id1",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id1",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id1",
              "update_at": 0,
              "username": "username-id1",
            },
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id2@email.test",
              "email_verified": true,
              "first_name": "name-id2",
              "id": "id2",
              "is_bot": false,
              "last_name": "name-id2",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id2",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id2",
              "update_at": 0,
              "username": "username-id2",
            },
          ],
          "profilesNotInChannel": Array [
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id3@email.test",
              "email_verified": true,
              "first_name": "name-id3",
              "id": "id3",
              "is_bot": false,
              "last_name": "name-id3",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id3",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id3",
              "update_at": 0,
              "username": "username-id3",
            },
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id4@email.test",
              "email_verified": true,
              "first_name": "name-id4",
              "id": "id4",
              "is_bot": false,
              "last_name": "name-id4",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id4",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id4",
              "update_at": 0,
              "username": "username-id4",
            },
          ],
          "requestStarted": false,
          "useChannelMentions": true,
        },
        ChannelMentionProvider {
          "autocompleteChannels": [MockFunction],
          "disableDispatches": false,
          "lastCompletedWord": "",
          "lastPrefixTrimmed": "",
          "lastPrefixWithNoResults": "",
          "latestComplete": true,
          "latestPrefix": "",
          "requestStarted": false,
        },
        EmoticonProvider {
          "disableDispatches": false,
          "latestComplete": true,
          "latestPrefix": "",
          "requestStarted": false,
        },
      ]
    }
    renderDividers={true}
    renderNoResults={false}
    replaceAllInputOnSelect={false}
    requiredCharacters={1}
    spellCheck="true"
    style={
      Object {
        "visibility": "visible",
      }
    }
    value="some test text that exceeds char limit"
  />
</div>
`;

exports[`components/TextBox should throw error when value is too long 1`] = `
<div
  className="textarea-wrapper"
>
  <SuggestionBox
    className="form-control custom-textarea"
    completeOnTab={true}
    containerClass=""
    id="someid"
    inputComponent={[Function]}
    isRHS={false}
    listComponent={[Function]}
    listStyle="top"
    listenForMentionKeyClick={false}
    onBlur={[Function]}
    onChange={[Function]}
    onHeightChange={[Function]}
    onKeyDown={[Function]}
    onKeyPress={[Function]}
    onKeyUp={[Function]}
    onMouseUp={[Function]}
    openOnFocus={false}
    openWhenEmpty={false}
    placeholder="placeholder text"
    providers={
      Array [
        AtMentionProvider {
          "autocompleteUsersInChannel": [Function],
          "currentUserId": "currentUserId",
          "data": null,
          "disableDispatches": false,
          "latestComplete": true,
          "latestPrefix": "",
          "profilesInChannel": Array [
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id1@email.test",
              "email_verified": true,
              "first_name": "name-id1",
              "id": "id1",
              "is_bot": false,
              "last_name": "name-id1",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id1",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id1",
              "update_at": 0,
              "username": "username-id1",
            },
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id2@email.test",
              "email_verified": true,
              "first_name": "name-id2",
              "id": "id2",
              "is_bot": false,
              "last_name": "name-id2",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id2",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id2",
              "update_at": 0,
              "username": "username-id2",
            },
          ],
          "profilesNotInChannel": Array [
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id3@email.test",
              "email_verified": true,
              "first_name": "name-id3",
              "id": "id3",
              "is_bot": false,
              "last_name": "name-id3",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id3",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id3",
              "update_at": 0,
              "username": "username-id3",
            },
            Object {
              "auth_data": "",
              "auth_service": "",
              "create_at": 0,
              "delete_at": 0,
              "email": "id4@email.test",
              "email_verified": true,
              "first_name": "name-id4",
              "id": "id4",
              "is_bot": false,
              "last_name": "name-id4",
              "last_picture_update": 0,
              "locale": "",
              "nickname": "id4",
              "notify_props": Object {
                "channel": "true",
                "comments": "never",
                "desktop": "default",
                "desktop_sound": "true",
                "email": "true",
                "first_name": "true",
                "mark_unread": "all",
                "mention_keys": "",
                "push": "default",
                "push_status": "ooo",
              },
              "position": "",
              "roles": "",
              "terms_of_service_create_at": 0,
              "terms_of_service_id": "tos-id4",
              "update_at": 0,
              "username": "username-id4",
            },
          ],
          "requestStarted": false,
          "useChannelMentions": true,
        },
        ChannelMentionProvider {
          "autocompleteChannels": [MockFunction],
          "disableDispatches": false,
          "lastCompletedWord": "",
          "lastPrefixTrimmed": "",
          "lastPrefixWithNoResults": "",
          "latestComplete": true,
          "latestPrefix": "",
          "requestStarted": false,
        },
        EmoticonProvider {
          "disableDispatches": false,
          "latestComplete": true,
          "latestPrefix": "",
          "requestStarted": false,
        },
      ]
    }
    renderDividers={true}
    renderNoResults={false}
    replaceAllInputOnSelect={false}
    requiredCharacters={1}
    spellCheck="true"
    style={
      Object {
        "visibility": "visible",
      }
    }
    value="some test text that exceeds char limit"
  />
</div>
`;
